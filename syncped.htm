<!--
Name:      syncped.htm
Purpose:   Users guide for syncped
Author:    Anton van Wezenbeek
Copyright: (c) 2013 Anton van Wezenbeek
-->

<html>
<head>
<title>syncped help</title>
<meta name="description" content="users guide for syncped">
<meta name="keywords" content="syncped help">
</head>

<body>

<style type="text/css">
.TableStyle
{
<!-- font-family: Verdana; -->
font-weight: normal;
font-size: 11px;
color: #404040;
background-color: #fafafa;
border: 1px #6699CC solid;
}
</style>
  
<p>
syncped is a <b>SYNC</b>hronizing <b>P</b>ortable <b>ED</b>itor
supporting more than 100 programming
languages, is available under Windows, Linux, Mac OS 10.4, 
has a vi compatibility mode, and
can be configured to work with most version control systems.

<ul>
<li> 
syncped has automatic synchronizing for all its
<a HREF="#EDIT">editor windows</a> and its <a HREF="#LIST">list windows</a>.

<li> 
Several themes are supported, changing a theme is done by 
clicking on the status bar theme pane.
You can add new themes, or change existing ones by editing
the lexers.xml file, opened by right clicking on the
status bar theme pane.

<li> 
It can be configured to work with most 
<a HREF="#VCS">version control systems</a>. 

<li> 
You can use <a HREF="#VI">vi keys</a> for navigating and editing by setting 
the vi Mode in the options.

<li> 
You can view a file in hex format by clicking the file type pane
on the status bar. You can also set the Hex 
checkbox on the toolbar, then files are directly opened in hex mode.

<li> 
You can specify on the command line the file(s) to open, 
wildcards * and ? are allowed.
You can also drop files from windows explorer to syncped.
</ul>

<hr>
<a NAME="EDIT"></a><b>Editor</b>
<p>
This is an MDI notebook editor implemented using a
<a HREF="http://www.scintilla.org">scintilla</a> component.

<p>
<ul>
<li> Synchronizes if the file is changed from outside. Can be used for
     viewing log files: If you're on the last position in a log file
     and the log file is synchronized, then only new data is added to the
     file, and your position is restored to the end of file. 
     This also works in hex mode.
<li> All scintilla lexers are supported, the colouring and 
     keywords are read from lexers.xml, editable by right clicking on 
     the status bar lexer pane.
     Editing this file and saving it directly shows
     colouring style changes on all open editors.
<li> Fast searching by selecting text and pressing F3 or F4.
<li> If you select several lines, you can sort the selection using
     any sort position in the selection. The default sort position
     is the cursor position at the last line of the selection.
<li> You can set rectangular selection by pressing ALT before selecting.
<li> When the mouse is on a hex number the decimal number is
     shown as a tooltip by pressing Ctrl D.
<li> Links are navigated using the popup menu on a Link.
<li> Zoom in and out using Ctrl - and Ctrl = keys.
<li> Find marked text using Ctrl 9 and Ctrl 0 keys.
<li> You can right click on the first line to show current properties.
<li> You can click on the status bar pane file type to change the current
     file type.
<li> You can click on the status bar pane lexer to change the
     default lexer for this file. You can also right click the lexer 
     pane, to be able to change the syntax colouring for this lexer.
<li> You can click on the macro bar pane to playback a macro.
     You can also right click the macro 
     pane, to be able to edit macros (vi mode should be set).
<li> You can also right click the notebook tab pane,
     this shows the recently opened file menu.
</ul>

<hr>
<a NAME="VI"></a><b>vi keys</b>
<p>

<!-- Main Table -->
<table width="100%" border="0" cellspacing="0" cellpadding="5">
<tr>

<td width="33%" valign="top">
<table border="1" valign="top" class="TableStyle">
<tr bgcolor="#9acd32">
  <th align="left">key</th>
  <th align="left">action</th>
</tr>
<tr><td colspan="2" bgcolor="#9acd32">single char commands</td></tr>
<tr><td>a</td><td>insert after cursor</td></tr>
<tr><td>b</td><td>left one word</td></tr>
<tr><td>e</td><td>word right end</td></tr>
<tr><td>g</td><td>start of document</td></tr>
<tr><td>h</td><td>left one character</td></tr>
<tr><td>i</td><td>insert before cursor</td></tr>
<tr><td>j</td><td>down one line</td></tr>
<tr><td>k</td><td>up one line</td></tr>
<tr><td>l</td><td>right one character</td></tr>
<tr><td>n</td><td>repeat the most recent search, in the same direction</td></tr>
<tr><td>o</td><td>insert after line</td></tr>
<tr><td>p</td><td>put after cursor</td></tr>
<tr><td>q</td><td>stop macro recording</td></tr>
<tr><td>u</td><td>undo</td></tr>
<tr><td>w</td><td>right one word</td></tr>
<tr><td>y</td><td>yank selection</td></tr>
<tr><td>x</td><td>delete</td></tr>
<tr><td><i>space</i></td><td>right one character</td></tr>

<tr><td>A</td><td>insert after end of line</td></tr>
<tr><td>C</td><td>change to end of line</td></tr>
<tr><td>D</td><td>delete line right</td></tr>
<tr><td>G</td><td>goto end or line number if prefixed</td></tr>
<tr><td>H</td><td>goto first line of the screen</td></tr>
<tr><td>I</td><td>insert at begin</td></tr>
<tr><td>J</td><td>join lines</td></tr>
<tr><td>L</td><td>goto last line of the screen</td></tr>
<tr><td>M</td><td>goto middle line of the screen</td></tr>
<tr><td>N</td><td>repeat the most recent search, in the opposite  direction</td></tr>
<tr><td>O</td><td>insert before line</td></tr>
<tr><td>P</td><td>put before cursor</td></tr>
<tr><td>R</td><td>replace many chars, enters overtype mode</td></tr>
<tr><td>X</td><td>delete backwards</td></tr>

<tr><td>/</td><td>next occurrence</td></tr>
<tr><td>?</td><td>previous occurrence</td></tr>
<tr><td>.</td><td>repeat last action</td></tr>
<tr><td>;</td><td>repeat last find char</td></tr>
<tr><td>~</td><td>toggle case</td></tr>
<tr><td>$</td><td>end of line</td></tr>
<tr><td>0,^</td><td>begin of line</td></tr>
<tr><td>{</td><td>paragraph up</td></tr>
<tr><td>}</td><td>paragraph down</td></tr>
<tr><td>%</td><td>matching brace</td></tr>
<tr><td>#</td><td>previous occurrence of word under cursor</td></tr>
<tr><td>*</td><td>next occurrence of word under cursor</td></tr>
<tr><td>+</td><td>down one line, goto home</td></tr>
<tr><td>-</td><td>up one line, goto home</td></tr>
</table>
</td>

<td width="33%" valign="top">
<table border="1" valign="top" class="TableStyle">
<tr bgcolor="#9acd32">
  <th align="left">key</th>
  <th align="left">action</th>
</tr>
<tr><td colspan="2" bgcolor="#9acd32">control char commands</td></tr>
<tr><td>ctrl b</td><td>page up</td></tr>
<tr><td>ctrl e</td><td>increment word under cursor</td></tr>
<tr><td>ctrl f</td><td>page down</td></tr>
<tr><td>ctrl j</td><td>decrement word under cursor</td></tr>
<tr><td>ctrl p</td><td>scroll up</td></tr>
<tr><td>ctrl q</td><td>scroll down</td></tr>
<tr><td>ctrl r?</td><td>inserts contents of register</td></tr>
<tr><td>ctrl r=</td><td>enters register calculation mode</td></tr>

<tr><td colspan="2" bgcolor="#9acd32">double or more char commands</td></tr>
<tr><td>cc</td><td>change line</td></tr>
<tr><td>cw</td><td>change word</td></tr>
<tr><td>dd</td><td>delete line</td></tr>
<tr><td>de</td><td>delete word (to end of word)</td></tr>
<tr><td>d0</td><td>delete line left</td></tr>
<tr><td>d$</td><td>delete line right</td></tr>
<tr><td>dw</td><td>delete word</td></tr>
<tr><td>f?</td><td>find next character</td></tr>
<tr><td>F?</td><td>find previous character</td></tr>
<tr><td>m?</td><td>mark line</td></tr>
<tr><td>qx</td><td>record macro x</td></tr>
<tr><td>qX</td><td>record macro x (appends to x)</td></tr>
<tr><td>@x</td><td>plays back macro x (one char)</td></tr>
<tr><td>@xx@</td><td>plays back macro xx (several characters)</td></tr>
<tr><td>@@</td><td>plays back last macro</td></tr>
<tr><td>r?</td><td>replace current character only</td></tr>
<tr><td>yw</td><td>yank word</td></tr>
<tr><td>yy</td><td>yank line</td></tr>
<tr><td>ZZ</td><td>save and quit</td></tr>
<tr><td>zc</td><td>fold close</td></tr>
<tr><td>zo</td><td>fold open</td></tr>
<tr><td>zE</td><td>fold disable</td></tr>
<tr><td>zf</td><td>fold enable</td></tr>
<tr><td>'?</td><td>goto marker</td></tr>
<tr><td>"?</td><td>prepares register to receive contents of yy, yw, de, dd, dw, d0, d$</td></tr>
<tr><td>&gt;&gt;</td><td>increase indent</td></tr>
<tr><td>&lt;&lt;</td><td>decrease indent</td></tr>
</table>
</td>

<td width="33%" valign="top">
<table border="1" valign="top" class="TableStyle">
<tr bgcolor="#9acd32">
  <th align="left">key</th>
  <th align="left">action</th>
</tr>
<tr><td colspan="2" bgcolor="#9acd32">colon commands</td></tr>
<tr><td>:.=        </td><td>current line</td></tr>
<tr><td>:$         </td><td>goto end of document</td></tr>
<tr><td>:[address]&gt;</td><td>increase indent</td></tr>
<tr><td>:[address]&lt;</td><chtd>decrease indent</td></tr>
<tr><td>:close     </td><td>closes current document</td></tr>
<tr><td>:[address]d</td><td>delete</td></tr>
<tr><td>:e         </td><td>edit (show select file dialog)</td></tr>
<tr><td>:e *       </td><td>edit file *</td></tr>
<tr><td>:[address]m dest </td><td>move dest</td></tr>
<tr><td>:g         </td><td>global command</td></tr>
<tr><td>:n         </td><td>next</td></tr>
<tr><td>:prev      </td><td>previous</td></tr>
<tr><td>:q         </td><td>quit unless modified</td></tr>
<tr><td>:q!        </td><td>quit forced</td></tr>
<tr><td>:r *       </td><td>insert contents of file * below cursor</td></tr>
<tr><td>:r !<i>command</i></td><td>executes <i>command</i> and inserts output below cursor</td></tr>
<tr><td>:reg       </td><td>shows registers </td></tr>
<tr><td>:set ic    </td><td>sets ignore case</td></tr>
<tr><td>:set ic!   </td><td>sets mat case</td></tr>
<tr><td>:set list  </td><td>shows whitespace</td></tr>
<tr><td>:set list! </td><td>hides whitespace</td></tr>
<tr><td>:set nu    </td><td>shows line numbers</td></tr>
<tr><td>:set nu!   </td><td>hides line numbers</td></tr>
<tr><td>:set ts no </td><td>sets tabstop at every no</td></tr>
<tr><td>:[address]s/p/r/</td><td>substitute p by r (always global)</td></tr>
<tr><td>:w         </td><td>save</td></tr>
<tr><td>:w *       </td><td>save to file *</td></tr>
<tr><td>:x         </td><td>save and quit</td></tr>
<tr><td>:y         </td><td>yank current line</td></tr>
<tr><td>:!<i>command</i></td><td>executes <i>command</i> and shows output</td></tr>

<tr><td colspan="2" bgcolor="#9acd32">global commands</td></tr>
<tr><td>:g/pattern/d</td><td>delete lines containing pattern</td></tr>
<tr><td>:g/pattern/p</td><td>print lines containing pattern</td></tr>
<tr><td>:g/pattern/s/replacement</td><td>substitute pattern by replacement</td></tr>
</table>

</table>

<p>
When substituting you can use &amp; or &#92;0 to represent the target, 
and &#92;U to convert to uppercase and &#92;L to convert to lowercase.

<p>
Most commands can be prefixed with a multidigit number, that takes care of
repeating that command the number specified.

<p>
Some special macro variables exist as well, see the macros.xml file.
These variables can be used inside macros, or entered on the vi bar.
When used inside macros, they are expanded when playing back.

<p>
Macros can refer to template files, giving you a possibiliy to
e.g. create header files.

<p>
You can also record and playback macros from the menu bar. In that
case macro names are not limited to one character.

<hr>
<a NAME="LIST"></a><b>List</b>
<p>
The output lists and the projects are implemented using a MDI notebook using a
standard list control component.

<p>

<ul>
<li> Synchronizes if a list item is changed from outside.
<li> 'Find In ...' is available that allows you
     to find text in all files in your project. If items are selected in
     the project, then searching is limited to these files.
<li> The list can be sorted on each of its columns by
     clicking on the column header.
     You also have an Automatic Sort option for the project. If set, then
     your project is automatically sorted ascending or descending
     (depending on your SortMethod) and resorted whenever
     one of the files in the project is synchronized.
<li> An item on the list can be opened by double clicking.
<li> List items can be copied to the clipboard as
     ascii text with columns separated by tabs, and then pasted on other lists,
     or into an edit window.
</ul>

<p>
The project files are stored as XML files containing the full paths of all items.
You can edit it using 'File Open As Text' in order to replace or change items.

<hr>
<a NAME="VCS"></a><b>Version Control Systems</b>
<p>
Support for VCS is configured by the vcs.xml file. 
At this moment there is support for 
Bazaar, CVS, GIT, Mercurial, SCCS and SVN. 
Others should be not to difficult to add.

<p>
e.g. the next svn commands are supported:

<p>
<table border="1" valign="top" class="TableStyle">
<tr bgcolor="#9acd32">
  <th align="left">svn command</th>
  <th align="left">action</th>
</tr>
<tr><td>add     </td><td>invokes svn add</td></tr>
<tr><td>blame   </td><td>asks for revision and shows revision with blame info in editor window</</td></tr>
<tr><td>cat     </td><td>asks for revision and shows revision in editor window</td></tr>
<tr><td>commit  </td><td>asks for commit text and commits</td></tr>
<tr><td>diff    </td><td>shows svn diff</td></tr>
<tr><td>cleanup </td><td>invokes svn cleanup</td></tr>
<tr><td>help    </td><td>invokes svn help</td></tr>
<tr><td>info    </td><td>shows svn info</td></tr>
<tr><td>log     </td><td>shows svn log</td></tr>
<tr><td>ls      </td><td>invokes svn ls</td></tr>
<tr><td>proplist</td><td>shows svn properties</td></tr>
<tr><td>propset </td><td>sets svn properties</td></tr>
<tr><td>stat    </td><td>shows svn stat</td></tr>
<tr><td>update  </td><td>updates svn</td></tr>
</table>

<p>
The VCS submenu is shown when right clicking on an editor window, and 
the associated file is within a folder that is under version control.
It is also shown when you click on the status bar VCS pane.

<p>
On a project window and the explorer window there is also a VCS submenu
if appropriate for the current file or folder.
You can also select multiple files and do a VCS command over all 
files selected.

<p>
Finally you can configure auto VCS to be used, in that case 
syncped checks for each file whether there is an admin dir 
according to the information in vcs.xml and 
uses that one.

</body>
</html>
