<!--
Name:      syncped.htm
Purpose:   Users guide for syncped
Author:    Anton van Wezenbeek
Copyright: (c) 2014 Anton van Wezenbeek
-->

<html>
<head>
<title>syncped help</title>
<meta name="description" content="users guide for syncped">
<meta name="keywords" content="syncped help">
</head>

<body>

<style type="text/css">
.TableStyle
{
<!-- font-family: Verdana; -->
font-weight: normal;
font-size: 11px;
color: #404040;
background-color: #fafafa;
border: 1px #6699CC solid;
}
</style>
  
<p>
syncped is a <b>SYNC</b>hronizing <b>P</b>ortable <b>ED</b>itor
supporting more than 100 programming
languages, is available under Windows, Linux, Mac OS 10.4, 
has a vi compatibility mode, and
can be configured to work with most version control systems.

<hr>
<b>vi keys</b>
<p>
The following vi keys are supported for navigating and editing, after setting 
vi Mode in the options.

<p>
<!-- Main Table -->
<table width="100%" border="0" cellspacing="0" cellpadding="5">
<tr>

<td width="33%" valign="top">
<table border="1" valign="top" class="TableStyle">
<tr bgcolor="#9acd32">
  <th align="left">key</th>
  <th align="left">action</th>
</tr>
<tr><td colspan="2" bgcolor="#9acd32">single char commands</td></tr>
<tr><td>a</td><td>insert after cursor</td></tr>
<tr><td>b</td><td>left one word</td></tr>
<tr><td>e</td><td>word right end</td></tr>
<tr><td>g</td><td>start of document</td></tr>
<tr><td>h</td><td>left one character</td></tr>
<tr><td>i</td><td>insert before cursor</td></tr>
<tr><td>j</td><td>down one line</td></tr>
<tr><td>k</td><td>up one line</td></tr>
<tr><td>l</td><td>right one character</td></tr>
<tr><td>n</td><td>repeat the most recent search, in the same direction</td></tr>
<tr><td>o</td><td>insert after line</td></tr>
<tr><td>p</td><td>put after cursor</td></tr>
<tr><td>q</td><td>stop macro recording</td></tr>
<tr><td>u</td><td>undo</td></tr>
<tr><td>v</td><td>enter visual mode</td></tr>
<tr><td>w</td><td>right one word</td></tr>
<tr><td>x</td><td>delete</td></tr>
<tr><td><i>space</i></td><td>right one character</td></tr>

<tr><td>A</td><td>insert after end of line</td></tr>
<tr><td>C</td><td>change to end of line</td></tr>
<tr><td>D</td><td>delete line right</td></tr>
<tr><td>G</td><td>goto end or line number if prefixed</td></tr>
<tr><td>H</td><td>goto first line of the screen</td></tr>
<tr><td>I</td><td>insert at begin</td></tr>
<tr><td>J</td><td>join lines</td></tr>
<tr><td>L</td><td>goto last line of the screen</td></tr>
<tr><td>M</td><td>goto middle line of the screen</td></tr>
<tr><td>N</td><td>repeat the most recent search, in the opposite  direction</td></tr>
<tr><td>O</td><td>insert before line</td></tr>
<tr><td>P</td><td>put before cursor</td></tr>
<tr><td>R</td><td>replace many chars, enters overtype mode</td></tr>
<tr><td>V</td><td>enter visual line mode</td></tr>
<tr><td>X</td><td>delete backwards</td></tr>

<tr><td>/</td><td>next occurrence</td></tr>
<tr><td>?</td><td>previous occurrence</td></tr>
<tr><td>.</td><td>repeat last action</td></tr>
<tr><td>;</td><td>repeat last find char</td></tr>
<tr><td>~</td><td>toggle case</td></tr>
<tr><td>$</td><td>end of line</td></tr>
<tr><td>0,^</td><td>begin of line</td></tr>
<tr><td>{</td><td>paragraph up, in visual mode adds to selection</td></tr>
<tr><td>}</td><td>paragraph down, in visual mode adds to selection</td></tr>
<tr><td>%</td><td>matching brace, in visual mode selects with matching brace</td></tr>
<tr><td>#</td><td>previous occurrence of word under cursor</td></tr>
<tr><td>*</td><td>next occurrence of word under cursor</td></tr>
<tr><td>+</td><td>down one line, goto home</td></tr>
<tr><td>-</td><td>up one line, goto home</td></tr>
<tr><td>tab</td><td>indents selection</td></tr>
<tr><td>TAB</td><td>dedents selection</td></tr>
<tr><td>ESC</td><td>escape deselects, goes back to normal mode</td></tr>
</table>
</td>

<td width="33%" valign="top">
<table border="1" valign="top" class="TableStyle">
<tr bgcolor="#9acd32">
  <th align="left">key</th>
  <th align="left">action</th>
</tr>
<tr><td colspan="2" bgcolor="#9acd32">control char commands</td></tr>
<tr><td>ctrl b</td><td>page up</td></tr>
<tr><td>ctrl e</td><td>increment word under cursor</td></tr>
<tr><td>ctrl f</td><td>page down</td></tr>
<tr><td>ctrl g</td><td>shows filename and state</td></tr>
<tr><td>ctrl j</td><td>decrement word under cursor</td></tr>
<tr><td>ctrl p</td><td>scroll up</td></tr>
<tr><td>ctrl q</td><td>scroll down</td></tr>
<tr><td>ctrl r?</td><td>inserts contents of register if in insert mode</td></tr>
<tr><td>ctrl r%</td><td>inserts contents of % register, or copies contents to 
clipboard if not in insert mode</td></tr>
<tr><td>ctrl r=</td><td>enters register calculation mode</td></tr>

<tr><td colspan="2" bgcolor="#9acd32">double or more char commands</td></tr>
<tr><td>cc</td><td>change line</td></tr>
<tr><td>cw</td><td>change word</td></tr>
<tr><td>dd</td><td>delete line or selection</td></tr>
<tr><td>de</td><td>delete word (to end of word)</td></tr>
<tr><td>d0</td><td>delete line left</td></tr>
<tr><td>d$</td><td>delete line right</td></tr>
<tr><td>dw</td><td>delete word</td></tr>
<tr><td>f?</td><td>find next character</td></tr>
<tr><td>F?</td><td>find previous character</td></tr>
<tr><td>m?</td><td>mark current line (one letter marker)</td></tr>
<tr><td>qx</td><td>record macro x</td></tr>
<tr><td>qX</td><td>record macro x (appends to x)</td></tr>
<tr><td>@x</td><td>plays back macro x (one char)</td></tr>
<tr><td>@xx@</td><td>plays back macro xx (several characters)</td></tr>
<tr><td>@@</td><td>plays back last macro</td></tr>
<tr><td>r?</td><td>replace current character only</td></tr>
<tr><td>t?</td><td>find next character, caret before pos</td></tr>
<tr><td>T?</td><td>find previous character, caret before pos</td></tr>
<tr><td>yw</td><td>yank word</td></tr>
<tr><td>yy</td><td>yank line or selection</td></tr>
<tr><td>ZZ</td><td>save and quit</td></tr>
<tr><td>zc</td><td>fold close</td></tr>
<tr><td>zo</td><td>fold open</td></tr>
<tr><td>zE</td><td>fold disable</td></tr>
<tr><td>zf</td><td>fold enable</td></tr>
<tr><td>'?</td><td>goto marker</td></tr>
<tr><td>"?</td><td>prepares register to receive contents of yy, yw, de, dd, dw, d0, d$</td></tr>
<tr><td>&gt;&gt;</td><td>increase indent for current line, selection or visual area</td></tr>
<tr><td>&lt;&lt;</td><td>decrease indent for current line, selection or visual area</td></tr>
</table>
</td>

<td width="33%" valign="top">
<table border="1" valign="top" class="TableStyle">
<tr bgcolor="#9acd32">
  <th align="left">key</th>
  <th align="left">action</th>
</tr>
<tr><td colspan="2" bgcolor="#9acd32">colon commands</td></tr>
<tr><td>:.=         </td><td>current line</td></tr>
<tr><td>:$          </td><td>goto end of document</td></tr>
<tr><td>:close      </td><td>closes current document</td></tr>
<tr><td>:d         </td><td>delete current line</td></tr>
<tr><td>:e          </td><td>edit (show select file dialog)</td></tr>
<tr><td>:e *        </td><td>edit file *</td></tr>
<tr><td>:n          </td><td>next</td></tr>
<tr><td>:prev       </td><td>previous</td></tr>
<tr><td>:q          </td><td>quit unless modified</td></tr>
<tr><td>:q!         </td><td>quit forced</td></tr>
<tr><td>:r *        </td><td>insert contents of file * below cursor</td></tr>
<tr><td>:r !<i>command</i></td><td>executes <i>command</i> and inserts output below cursor</td></tr>
<tr><td>:[range]&gt;</td><td>increase indent for range</td></tr>
<tr><td>:[range]&lt;</td><td>decrease indent for range</td></tr>
<tr><td>:[range]d   </td><td>delete range</td></tr>
<tr><td>:[range]mx </td><td>move range to destination address x</td></tr>
<tr><td>:[range]s/p/r/[flags]</td><td>substitutes in range p by r using flags</td></tr>
<tr><td>:[range]!<i>command</i>  </td><td>filters range, range is used as input for <i>command</i>, output replaces range</td></tr>
<tr><td>:reg       </td><td>shows registers </td></tr>
<tr><td>:set ic    </td><td>sets ignore case</td></tr>
<tr><td>:set ic!   </td><td>sets match case</td></tr>
<tr><td>:set list  </td><td>shows whitespace</td></tr>
<tr><td>:set list! </td><td>hides whitespace</td></tr>
<tr><td>:set nu    </td><td>shows line numbers</td></tr>
<tr><td>:set nu!   </td><td>hides line numbers</td></tr>
<tr><td>:set ts=no </td><td>sets tabstop at every no</td></tr>
<tr><td>:set tabstop=no </td><td>sets tabstop at every no</td></tr>
<tr><td>:w         </td><td>save</td></tr>
<tr><td>:w *       </td><td>save to file *</td></tr>
<tr><td>:x         </td><td>save and quit</td></tr>
<tr><td>:y         </td><td>yank current line</td></tr>
<tr><td>:!<i>command</i></td><td>executes <i>command</i> and shows output</td></tr>

<tr><td colspan="2" bgcolor="#9acd32">global commands</td></tr>
<tr><td>:g//</td><td>remove all markers</td></tr>
<tr><td>:g/pattern/d</td><td>delete lines containing pattern</td></tr>
<tr><td>:g/pattern/</td><td>mark lines containing pattern</td></tr>
<tr><td>:g/pattern/p</td><td>print lines containing pattern, the lines are put on
a new tab pane called Print</td></tr>
<tr><td>:g/pattern/s/replacement</td><td>substitute pattern by replacement</td></tr>
</table>

</table>
  
<p>
[range]
<p>
<table border="1" valign="top" class="TableStyle">
<tr bgcolor="#9acd32">
  <th align="left">chars</th>
  <th align="left">range</th>
</tr>
<tr><td>%</td><td>entire document</td></tr>
<tr><td>*</td><td>visible area</td></tr>
<tr><td>'&lt;,'&gt;</td><td>visual (selected) area</td></tr>
<tr><td>.</td><td>current line only</td></tr>
<tr><td><i>x</i>,<i>y</i></td><td>line <i>x</i> to <i>y</i> 
(<i>x</i>,<i>y</i> can be a ., $, marker, or line no)</td></tr>
</table>

<p>
[register]
<p>
<table border="1" valign="top" class="TableStyle">
<tr bgcolor="#9acd32">
  <th align="left">name</th>
  <th align="left">purpose</th>
  <th align="left">explanation</th>
</tr>
<tr><td>%</td><td>filename register</td><td>current filename</td></tr>
<tr><td>_</td><td>black hole register</td><td>anything written to it is not kept</td></tr>
<tr><td>"</td><td>clipboard register</td><td>contents of clipboard</td></tr>
<tr><td>0</td><td>yank register</td><td>last yank value</td></tr>
<tr><td>1 - 9</td><td>delete registers</td><td>queue of 9 last deleted values</td></tr>
<tr><td>a - z</td><td>standard register</td><td>normal register</td></tr>
</table>

<p>
[flags]
<p>
<table border="1" valign="top" class="TableStyle">
<tr bgcolor="#9acd32">
  <th align="left">char</th>
  <th align="left">purpose</th>
</tr>
<tr><td>i</td><td>ignore case</td></tr>
<tr><td>c</td><td>ask for confirmation</td></tr>
<tr><td>g</td><td>global, otherwise only first match on line</td></tr>
</table>

<p>
When substituting you can use &amp; or &#92;0 to represent the target, 
and &#92;U to convert to uppercase and &#92;L to convert to lowercase.

<p>
Most commands can be prefixed with a multidigit number, that takes care of
repeating that command the number specified.

<hr>
<b>vi Macros</b>
<p>
Some special macro variables exist as well, see the macros.xml file.
These variables can be used inside macros, or entered on the vi bar.
When used inside macros, they are expanded when playing back.

<p>
Macros can refer to template files, giving you a possibiliy to
e.g. create header files.

<p>
You can also record and playback macros from the menu bar. In that
case macro names are not limited to one character.

<p>
You might add a macro to do a substitute on all open pages by
pressing:
<p>
<code>
qa
<br>
:s/xxx/YYY/gc
<br>
:n
<br>
q
<br>
</code>

<p>
Then, after pressing <code>100@a</code>, this macro is run 100 times, to
to substitute in (at most) 100 open files, it stops at the last tab.

<p>
You can also add a macro to update column numbers. If you have the following
columns:
<p>
<code>
age   income<br>
20    1000<br>
21    1010<br>
22    1020<br>
23    1030<br>
24    1040<br>
</code>

<hr>
<b>Editor Tab</b>
<p>
<ul>
<li> Synchronizes if the file is changed from outside. Can be used for
     viewing log files: If you're on the last position in a log file
     and the log file is synchronized, then only new data is added to the
     file, and your position is restored to the end of file. 
     This also works in hex mode.
<li> Fast searching by selecting text and pressing F3 or F4.
<li> If you select several lines, you can sort the selection using
     any sort position in the selection. The default sort position
     is the cursor position at the last line of the selection.
<li> You can set rectangular selection by pressing ALT before selecting.
<li> When the mouse is on a hex number the decimal number is
     shown as a tooltip by pressing Ctrl D.
<li> Links are navigated using the popup menu on a Link.
<li> Zoom in and out using Ctrl - and Ctrl = keys.
<li> Find marked text using Ctrl 9 and Ctrl 0 keys.
<li> Click on the first line to show current properties.
<li> If the Hex checkbox on the optionsbar is set, then files are directly 
     opened in hex mode.
<li> The tab can be split by selecting 
     Split from the context menu on the tab, as many times as you want.
     This causes the tab, and the splitted tab to be unsynced.
     To resync, you should uncheck and check the Sync checkbox.
</ul>

<hr>
<b>Status Bar</b>
<p>
<ul>
<li> Click on the file type pane to change the current
     file type, or to view a file in hex format. 
<li> Click on the lines pane to goto a line. 
<li> Click on the lexer pane to change the lexer for this file. 
     Right click this pane to change the syntax colouring for this lexer.
     All <a HREF="http://www.scintilla.org">scintilla</a> lexers are supported.
     Editing this file and saving it directly shows
     colouring style changes on all open editors.
<li> Click on the theme pane to change a theme.
     Right click this pane to add new themes, 
     or change existing ones.
<li> Click on the VCS pane to run VCS commands. 
     Right click this pane to add VCS commands.
<li> Click on the macro pane to playback a macro.
     Right click this pane to edit macros (vi mode should be set).
</ul>

<hr>
<b>List Tab</b>
<p>

<ul>
<li> Synchronizes if a list item is changed from outside.
<li> 'Find In ...' is available that allows you
     to find text in all files in your project. If items are selected in
     the project, then searching is limited to these files.
<li> The list can be sorted on each of its columns by
     clicking on the column header.
     You also have an Automatic Sort option for the project. If set, then
     your project is automatically sorted ascending or descending
     (depending on your SortMethod) and resorted whenever
     one of the files in the project is synchronized.
<li> An item on the list can be opened by double clicking.
<li> List items can be copied to the clipboard as
     ascii text with columns separated by tabs, and then pasted on other lists,
     or into an edit window.
</ul>

<p>
The project files are stored as XML files containing the full paths of all items.
Edit it using 'File Open As Text' in order to replace or change items.

<hr>
<b>Version Control Systems</b>
<p>
Support for VCS is configured by the vcs.xml file. 
At this moment there is support for 
Bazaar, CVS, GIT, Mercurial, SCCS and SVN. 

<p>
e.g. the next svn commands are supported:

<p>
<table border="1" valign="top" class="TableStyle">
<tr bgcolor="#9acd32">
  <th align="left">svn command</th>
  <th align="left">action</th>
</tr>
<tr><td>add     </td><td>invokes svn add</td></tr>
<tr><td>blame   </td><td>asks for revision and shows revision with blame info in editor window</</td></tr>
<tr><td>cat     </td><td>asks for revision and shows revision in editor window</td></tr>
<tr><td>commit  </td><td>asks for commit text and commits</td></tr>
<tr><td>diff    </td><td>shows svn diff</td></tr>
<tr><td>cleanup </td><td>invokes svn cleanup</td></tr>
<tr><td>help    </td><td>invokes svn help</td></tr>
<tr><td>info    </td><td>shows svn info</td></tr>
<tr><td>log     </td><td>shows svn log</td></tr>
<tr><td>ls      </td><td>invokes svn ls</td></tr>
<tr><td>proplist</td><td>shows svn properties</td></tr>
<tr><td>propset </td><td>sets svn properties</td></tr>
<tr><td>stat    </td><td>shows svn stat</td></tr>
<tr><td>update  </td><td>updates svn</td></tr>
</table>

<p>
The VCS submenu is shown:

<ul>
<li> When right clicking on an editor window, and 
     the associated file is within a folder that is under version control.
<li> On a project window and the explorer window
     if appropriate for the current file or folder.
     You can also select multiple files and do a VCS command over all 
     files selected.
<li> When you click on the status bar VCS pane.
</ul>

<p>
Finally you can configure auto VCS to be used, in that case 
syncped checks for each file whether there is an admin dir 
according to the information in vcs.xml and 
uses that one.

</body>
</html>
